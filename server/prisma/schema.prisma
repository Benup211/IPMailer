// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id      Int     @id @default(autoincrement())
  email   String  @unique
  password String
  organization String
  active  Boolean @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  tokens   Token[]
  subscribers Subscriber[]
  mails     Mail[]
  drafts   DraftMail[]
  smtps  SmtpServer[]
}

enum TokenType {
  PASSWORD_RESET
  VERIFICATION
  TWO_FACTOR
}
model Token {
  id           String     @id @default(uuid())
  userId       Int
  type         TokenType
  token        Int
  expiry       DateTime
  user         User     @relation(fields: [userId], references: [id])
}

model Subscriber {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  userId    Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id])
}

model Mail{
  id        Int     @id @default(autoincrement())
  subject   String
  message      String
  sendDate DateTime @default(now())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}

model DraftMail{
  id        Int     @id @default(autoincrement())
  subject   String
  message      String
  sendDate DateTime @default(now())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}

model SmtpServer{
  id        Int     @id @default(autoincrement())
  host   String
  port      Int
  username String
  password String
  addedAt DateTime @default(now())
  userId    Int
  user      User     @relation(fields: [userId], references: [id])
}